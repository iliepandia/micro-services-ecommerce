services:
  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    ports:
      - ${API_GATEWAY_PORT:-80}:80
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
      - product-service
      - order-service
      - payment-service
    networks:
      - backend

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    restart: always
    volumes:
      - ./user-service/source:/app
    depends_on:
      - user-db
    environment:
      - APP_ENV=production
      - API_INSIDER_SECRET_KEY=${API_INSIDER_SECRET_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=user-db
      - DB_DATABASE=user_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=3306
    networks:
      - backend

  product-service:
    build: ./product-service
    container_name: product-service
    restart: always
    volumes:
      - ./product-service/source:/app
    depends_on:
      - product-db
    environment:
      - APP_ENV=production
      - APP_URL="http://localhost:8181/products"
      - API_INSIDER_SECRET_KEY=${API_INSIDER_SECRET_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=product-db
      - DB_DATABASE=product_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=3306
    networks:
      - backend

  order-service:
    build: ./order-service
    container_name: order-service
    restart: always
    volumes:
      - ./order-service/source:/app
    depends_on:
      - order-db
    environment:
      - APP_ENV=production
      - APP_URL="http://localhost:8181/orders"
      - API_INSIDER_SECRET_KEY=${API_INSIDER_SECRET_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=order-db
      - DB_DATABASE=order_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=3306
    networks:
      - backend

  payment-service:
    build: ./payment-service
    container_name: payment-service
    restart: always
    volumes:
      - ./payment-service/source:/app
    depends_on:
      - payment-db
    environment:
      - APP_ENV=production
      - APP_URL="http://localhost:8181/payments"
      - API_INSIDER_SECRET_KEY=${API_INSIDER_SECRET_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=payment-db
      - DB_DATABASE=payment_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_PORT=3306
    networks:
      - backend

  user-db:
    image: mysql:5.7
    container_name: user-db
    restart: always
    environment:
      MYSQL_DATABASE: user_db
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./databases/user_db:/var/lib/mysql
    networks:
      - backend

  product-db:
    image: mysql:5.7
    container_name: product-db
    restart: always
    environment:
      MYSQL_DATABASE: product_db
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./databases/product_db:/var/lib/mysql
    networks:
      - backend

  order-db:
    image: mysql:5.7
    container_name: order-db
    restart: always
    environment:
      MYSQL_DATABASE: order_db
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./databases/order_db:/var/lib/mysql
    networks:
      - backend

  payment-db:
    image: mysql:5.7
    container_name: payment-db
    restart: always
    environment:
      MYSQL_DATABASE: payment_db
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./databases/payment_db:/var/lib/mysql
    networks:
      - backend

networks:
  backend:
    driver: bridge
